import numpy as np
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt

#blob depth:
# 
# OLD DATA WITH FIRST ROCORDING ELEMENT [0.359, 0.336, 0.331, 0.327, 0.34, 0.358, 0.386, 0.413, 0.432, 0.452, 0.475, 0.494, 0.504, 0.519, 0.522, 0.531, 0.556, 0.573, 0.58, 0.593, 0.599, 0.613, 0.616, 0.61, 0.613, 0.617, 0.628, 0.629, 0.639, 0.625, 0.625, 0.613, 0.601, 0.591, 0.579, 0.574, 0.573, 0.549, 0.525, 0.505, 0.493, 0.479, 0.46, 0.451, 0.433, 0.422, 0.416, 0.396, 0.364, 0.355, 0.338, 0.33, 0.317, 0.306, 0.276, 0.265, 0.253, 0.245, 0.252, 0.267, 0.287, 0.298, 0.304, 0.313, 0.326, 0.341, 0.346, 0.356, 0.367, 0.385, 0.403, 0.411, 0.418, 0.429, 0.448, 0.475, 0.495, 0.498, 0.505, 0.533, 0.566, 0.588, 0.613, 0.626, 0.632, 0.627, 0.61, 0.598, 0.592, 0.586, 0.571, 0.565, 0.543, 0.541, 0.525, 0.514, 0.516, 0.5, 0.488, 0.474, 0.466]  
X=[ 0.336, 0.331, 0.327, 0.34, 0.358, 0.386, 0.413, 0.432, 0.452, 0.475, 0.494, 0.504, 0.519, 0.522, 0.531, 0.556, 0.573, 0.58, 0.593, 0.599, 0.613, 0.616, 0.61, 0.613, 0.617, 0.628, 0.629, 0.639, 0.625, 0.625, 0.613, 0.601, 0.591, 0.579, 0.574, 0.573, 0.549, 0.525, 0.505, 0.493, 0.479, 0.46, 0.451, 0.433, 0.422, 0.416, 0.396, 0.364, 0.355, 0.338, 0.33, 0.317, 0.306, 0.276, 0.265, 0.253, 0.245, 0.252, 0.267, 0.287, 0.298, 0.304, 0.313, 0.326, 0.341, 0.346, 0.356, 0.367, 0.385, 0.403, 0.411, 0.418, 0.429, 0.448, 0.475, 0.495, 0.498, 0.505, 0.533, 0.566, 0.588, 0.613, 0.626, 0.632, 0.627, 0.61, 0.598, 0.592, 0.586, 0.571, 0.565, 0.543, 0.541, 0.525, 0.514, 0.516, 0.5, 0.488, 0.474, 0.466]

X = np.array(X)
#blob size:  
# OLD DATA WITH FIRST ROCORDING ELEMENT [10537, 22103, 22619, 24114, 20967, 17602, 13683, 11355, 9360, 7541, 6185, 5674, 4968, 4166, 4059, 3489, 3062, 2403, 2125, 2040, 1871, 1752, 1609, 1732, 1670, 1566, 1521, 1415, 1249, 79, 146, 1559, 1823, 2033, 2116, 2252, 2593, 3205, 4123, 4709, 5328, 5882, 7208, 7892, 9677, 9834, 10449, 12579, 16732, 17310, 20282, 22203, 24514, 27276, 37158, 43414, 48381, 52522, 46946, 40265, 34436, 31123, 29016, 27008, 24238, 21001, 19735, 18254, 16545, 14033, 11820, 11345, 10916, 9822, 7931, 6477, 5383, 5233, 5071, 3871, 2720, 2129, 1583, 1324, 1258, 1299, 1639, 1952, 2101, 2398, 2743, 2973, 3126, 3390, 4147, 4671, 4266, 5400, 6111, 6651, 7183] 
Y=[ 22103, 22619, 24114, 20967, 17602, 13683, 11355, 9360, 7541, 6185, 5674, 4968, 4166, 4059, 3489, 3062, 2403, 2125, 2040, 1871, 1752, 1609, 1732, 1670, 1566, 1521, 1415, 1249, 79, 146, 1559, 1823, 2033, 2116, 2252, 2593, 3205, 4123, 4709, 5328, 5882, 7208, 7892, 9677, 9834, 10449, 12579, 16732, 17310, 20282, 22203, 24514, 27276, 37158, 43414, 48381, 52522, 46946, 40265, 34436, 31123, 29016, 27008, 24238, 21001, 19735, 18254, 16545, 14033, 11820, 11345, 10916, 9822, 7931, 6477, 5383, 5233, 5071, 3871, 2720, 2129, 1583, 1324, 1258, 1299, 1639, 1952, 2101, 2398, 2743, 2973, 3126, 3390, 4147, 4671, 4266, 5400, 6111, 6651, 7183]
Y = np.array(Y)



#
# curve_fit
#
# Fit the function a * np.exp(b * t) to x and y
popt, pcov = curve_fit(lambda t, a, b: a * np.exp(b * t), X, Y)
# Extract the optimised parameters
a = popt[0]
b = popt[1]
print("a: ",a)
print("b: ",b)

x_fitted_curve_fit = np.linspace(np.min(X), np.max(X), 100)
y_fitted_curve_fit = a * np.exp(b * x_fitted_curve_fit)

plt.plot(x_fitted_curve_fit, y_fitted_curve_fit, 'b', label=r'curve\_fit')

plt.scatter(X, Y, color="red", marker="o")
plt.show()