import numpy as np
from scipy.optimize import curve_fit
import matplotlib.pyplot as plt

#blob depth:
# 
# OLD DATA WITH FIRST ROCORDING ELEMENT [0.359, 0.336, 0.331, 0.327, 0.34, 0.358, 0.386, 0.413, 0.432, 0.452, 0.475, 0.494, 0.504, 0.519, 0.522, 0.531, 0.556, 0.573, 0.58, 0.593, 0.599, 0.613, 0.616, 0.61, 0.613, 0.617, 0.628, 0.629, 0.639, 0.625, 0.625, 0.613, 0.601, 0.591, 0.579, 0.574, 0.573, 0.549, 0.525, 0.505, 0.493, 0.479, 0.46, 0.451, 0.433, 0.422, 0.416, 0.396, 0.364, 0.355, 0.338, 0.33, 0.317, 0.306, 0.276, 0.265, 0.253, 0.245, 0.252, 0.267, 0.287, 0.298, 0.304, 0.313, 0.326, 0.341, 0.346, 0.356, 0.367, 0.385, 0.403, 0.411, 0.418, 0.429, 0.448, 0.475, 0.495, 0.498, 0.505, 0.533, 0.566, 0.588, 0.613, 0.626, 0.632, 0.627, 0.61, 0.598, 0.592, 0.586, 0.571, 0.565, 0.543, 0.541, 0.525, 0.514, 0.516, 0.5, 0.488, 0.474, 0.466]  
X=[ 0.336, 0.331, 0.327, 0.34, 0.358, 0.386, 0.413, 0.432, 0.452, 0.475, 0.494, 0.504, 0.519, 0.522, 0.531, 0.556, 0.573, 0.58, 0.593, 0.599, 0.613, 0.616, 0.61, 0.613, 0.617, 0.628, 0.629, 0.639, 0.625, 0.625, 0.613, 0.601, 0.591, 0.579, 0.574, 0.573, 0.549, 0.525, 0.505, 0.493, 0.479, 0.46, 0.451, 0.433, 0.422, 0.416, 0.396, 0.364, 0.355, 0.338, 0.33, 0.317, 0.306, 0.276, 0.265, 0.253, 0.245, 0.252, 0.267, 0.287, 0.298, 0.304, 0.313, 0.326, 0.341, 0.346, 0.356, 0.367, 0.385, 0.403, 0.411, 0.418, 0.429, 0.448, 0.475, 0.495, 0.498, 0.505, 0.533, 0.566, 0.588, 0.613, 0.626, 0.632, 0.627, 0.61, 0.598, 0.592, 0.586, 0.571, 0.565, 0.543, 0.541, 0.525, 0.514, 0.516, 0.5, 0.488, 0.474, 0.466]

X = np.array(X)
#blob size:  
# OLD DATA WITH FIRST ROCORDING ELEMENT [10537, 22103, 22619, 24114, 20967, 17602, 13683, 11355, 9360, 7541, 6185, 5674, 4968, 4166, 4059, 3489, 3062, 2403, 2125, 2040, 1871, 1752, 1609, 1732, 1670, 1566, 1521, 1415, 1249, 79, 146, 1559, 1823, 2033, 2116, 2252, 2593, 3205, 4123, 4709, 5328, 5882, 7208, 7892, 9677, 9834, 10449, 12579, 16732, 17310, 20282, 22203, 24514, 27276, 37158, 43414, 48381, 52522, 46946, 40265, 34436, 31123, 29016, 27008, 24238, 21001, 19735, 18254, 16545, 14033, 11820, 11345, 10916, 9822, 7931, 6477, 5383, 5233, 5071, 3871, 2720, 2129, 1583, 1324, 1258, 1299, 1639, 1952, 2101, 2398, 2743, 2973, 3126, 3390, 4147, 4671, 4266, 5400, 6111, 6651, 7183] 
Y=[ 22103, 22619, 24114, 20967, 17602, 13683, 11355, 9360, 7541, 6185, 5674, 4968, 4166, 4059, 3489, 3062, 2403, 2125, 2040, 1871, 1752, 1609, 1732, 1670, 1566, 1521, 1415, 1249, 79, 146, 1559, 1823, 2033, 2116, 2252, 2593, 3205, 4123, 4709, 5328, 5882, 7208, 7892, 9677, 9834, 10449, 12579, 16732, 17310, 20282, 22203, 24514, 27276, 37158, 43414, 48381, 52522, 46946, 40265, 34436, 31123, 29016, 27008, 24238, 21001, 19735, 18254, 16545, 14033, 11820, 11345, 10916, 9822, 7931, 6477, 5383, 5233, 5071, 3871, 2720, 2129, 1583, 1324, 1258, 1299, 1639, 1952, 2101, 2398, 2743, 2973, 3126, 3390, 4147, 4671, 4266, 5400, 6111, 6651, 7183]
Y = np.array(Y)



#blob depth:
# 
# OLD DATA WITH FIRST ROCORDING ELEMENT [0.382, 0.379, 0.363, 0.358, 0.319, 0.286, 0.249, 0.223, 0.203, 0.227, 0.213, 0.241, 0.257, 0.288, 0.32, 0.357, 0.384, 0.419, 0.447, 0.472, 0.493, 0.511, 0.524, 0.515, 0.508, 0.505, 0.504, 0.497, 0.493, 0.494, 0.464, 0.441, 0.42, 0.4, 0.377, 0.362, 0.336, 0.32, 0.302, 0.271, 0.255, 0.248, 0.239, 0.23, 0.228, 0.238, 0.264, 0.29, 0.304, 0.314, 0.329, 0.36, 0.399, 0.425, 0.439, 0.441, 0.458, 0.463, 0.398, 0.379, 0.369, 0.348, 0.324, 0.308, 0.282, 0.273, 0.266, 0.255, 0.291, 0.306, 0.321, 0.338, 0.355, 0.364, 0.397, 0.409, 0.442, 0.45, 0.443, 0.415, 0.397, 0.366, 0.336, 0.295, 0.264, 0.239, 0.225, 0.23, 0.24, 0.276, 0.316, 0.351, 0.37, 0.392, 0.361, 0.332, 0.301, 0.281, 0.252, 0.214]
X=[0.382, 0.379, 0.363, 0.358, 0.319, 0.286, 0.249, 0.223, 0.213, 0.241, 0.257, 0.288, 0.32, 0.357, 0.384, 0.419, 0.447, 0.472, 0.493, 0.511, 0.524, 0.515, 0.508, 0.505, 0.504, 0.497, 0.493, 0.494, 0.464, 0.441, 0.42, 0.4, 0.377, 0.362, 0.336, 0.32, 0.302, 0.271, 0.255, 0.248, 0.239, 0.23, 0.228, 0.238, 0.264, 0.29, 0.304, 0.314, 0.329, 0.36, 0.399, 0.425, 0.439, 0.441, 0.458, 0.463, 0.398, 0.379, 0.369, 0.348, 0.324, 0.308, 0.282, 0.273, 0.266, 0.255, 0.291, 0.306, 0.321, 0.338, 0.355, 0.364, 0.397, 0.409, 0.442, 0.45, 0.443, 0.415, 0.397, 0.366, 0.336, 0.295, 0.264, 0.239, 0.225, 0.23, 0.24, 0.276, 0.316, 0.351, 0.37, 0.392, 0.361, 0.332, 0.301, 0.281, 0.252, 0.214]

X = np.array(X)
#blob size:  
# OLD DATA WITH FIRST ROCORDING ELEMENT [1763, 6681, 9655, 11130, 16066, 21537, 28772, 41887, 291, 180, 42597, 33474, 26299, 19483, 14944, 11256, 9366, 7722, 6146, 4945, 4278, 3596, 3147, 3165, 2828, 2721, 2794, 2885, 3075, 3082, 3825, 4840, 5748, 6809, 8643, 9541, 11355, 12797, 14975, 19945, 23909, 24892, 26577, 29574, 29888, 25948, 19311, 17439, 11323, 9024, 7685, 5194, 3445, 2314, 1789, 1065, 837, 1149, 3789, 4723, 6458, 8890, 11451, 14442, 17886, 17307, 17185, 18512, 13364, 10575, 7466, 2751, 1136, 1405, 1086, 521, 329, 339, 579, 863, 1468, 2565, 4779, 6772, 7990, 11566, 13930, 15456, 13913, 9934, 7121, 6605, 8197, 2763, 4182, 5884, 7930, 10828, 20029, 30852]
Y=[1763, 6681, 9655, 11130, 16066, 21537, 28772, 41887, 42597, 33474, 26299, 19483, 14944, 11256, 9366, 7722, 6146, 4945, 4278, 3596, 3147, 3165, 2828, 2721, 2794, 2885, 3075, 3082, 3825, 4840, 5748, 6809, 8643, 9541, 11355, 12797, 14975, 19945, 23909, 24892, 26577, 29574, 29888, 25948, 19311, 17439, 11323, 9024, 7685, 5194, 3445, 2314, 1789, 1065, 837, 1149, 3789, 4723, 6458, 8890, 11451, 14442, 17886, 17307, 17185, 18512, 13364, 10575, 7466, 2751, 1136, 1405, 1086, 521, 329, 339, 579, 863, 1468, 2565, 4779, 6772, 7990, 11566, 13930, 15456, 13913, 9934, 7121, 6605, 8197, 2763, 4182, 5884, 7930, 10828, 20029, 30852]
Y = np.array(Y)



#
# curve_fit
#
# Fit the function a * np.exp(b * t) to x and y
popt, pcov = curve_fit(lambda t, a, b: a * np.exp(b * t), X, Y)
# Extract the optimised parameters
a = popt[0]
b = popt[1]
print("a: ",a)
print("b: ",b)

x_fitted_curve_fit = np.linspace(np.min(X), np.max(X), 100)
y_fitted_curve_fit = a * np.exp(b * x_fitted_curve_fit)

plt.plot(x_fitted_curve_fit, y_fitted_curve_fit, 'b', label=r'curve\_fit')

plt.scatter(X, Y, color="red", marker="o")
plt.show()